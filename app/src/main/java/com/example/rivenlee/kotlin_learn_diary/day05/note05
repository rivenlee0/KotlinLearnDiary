面向对象的基本概念
- 本质上就是解决如何用程序描述世界的问题
- 讨论如何把实际存在的东西映射成程序的类和对象
- 一种程序设计的思路、思想、方法

- 程序设计层面的概念
- 设计模式：前人的程序设计经验

抽象类和接口（半成品与协议）

接口
- 直接理解就是一种约定，kotlin的接口与Objective-C的Protocol比较类似
抽象类
- 实现了一部分协议的半成品
- 可以有状态，可以有方法实现
- 必须由子类集成后使用

抽象类和接口的共性
- 比较抽象，不能直接实例化
- 有需要子类（实现类）实现的方法
- 父类（接口）变量可以接受子类（实现类）的实例赋值

抽象类和接口的区别
- 抽象类有状态，接口没有状态
- 抽象类有方法实现，接口只能有无状态的默认实现
- 抽象类只能单继承，接口可以多实现
- 抽象类反应本质，接口体现能力
